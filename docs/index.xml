<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jiegao on Jiegao</title>
    <link>https://hestation.com/</link>
    <description>Recent content in Jiegao on Jiegao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2019 10:47:06 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hello, Hugo</title>
      <link>https://hestation.com/2019/hugo/</link>
      <pubDate>Wed, 17 Jul 2019 10:47:06 +0800</pubDate>
      
      <guid>https://hestation.com/2019/hugo/</guid>
      <description>

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;记得是 16 年还在学校的时候开始折腾博客这个东西，而当时就觉得市面上所有现成的博客系统都做得不大好，要么太丑，要么太重。所以从一开始就走上了自建这么一条不归路，从买服务器，买域名，到接触不同的 Linux 系统，折腾过程中踩了很多坑，但也因此学会了很多东西。如今工作之后，由于没有继续干开发的工作，也很少花时间在这上面了，而以前写的一些东西也因此丢了，心里还是有点难过的。前两天突然心血来潮，觉着这种方式相比朋友圈、微博 Twitter 等东西，更能将过去的一些经验、日常沉淀下来，日后来看，说不定别有另一番滋味，于是，开搞。&lt;/p&gt;

&lt;p&gt;记得之前最后一个版本的博客是基于 Hexo 搞的，整体来讲还是不错的，不过记忆中那一堆 Nodejs 的依赖，各种乱七八糟的小问题，折腾了好久，再加上确实当内容多起来之后，每次编译生成的速度会比较慢，所以想着换一个试试，网上搜了一大圈，不少人都推荐 Hugo，于是做了下尝试，确实不错，暂时就用它了。以下是重新用它搭建的整体流程记录。&lt;/p&gt;

&lt;h2 id=&#34;本地安装&#34;&gt;本地安装&lt;/h2&gt;

&lt;h3 id=&#34;整个流程如下&#34;&gt;整个流程如下：&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;安装 Hugo&lt;/code&gt; -&amp;gt; &lt;code&gt;新建站点&lt;/code&gt; -&amp;gt; &lt;code&gt;选择并拷贝主题到 themes 目录&lt;/code&gt; -&amp;gt; &lt;code&gt;修改站点配置文件&lt;/code&gt; -&amp;gt; &lt;code&gt;本地测试运行&lt;/code&gt; -&amp;gt; &lt;code&gt;完成&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;整个站点各个目录的作用&#34;&gt;整个站点各个目录的作用：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;archetypes：给不同的类型定义默认FrontMatter，&lt;/li&gt;
&lt;li&gt;content：源文件，相当于 hexo 的 source 目录&lt;/li&gt;
&lt;li&gt;data：数据文件，一般用不上&lt;/li&gt;
&lt;li&gt;layouts：模板&lt;/li&gt;
&lt;li&gt;static：静态资源，也就是不需要Hugo处理的静态资源，比如图片等&lt;/li&gt;
&lt;li&gt;themes：第三方主题，将第三方主题拷贝到这个文件夹下即可使用&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考资料&#34;&gt;参考资料：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/documentation/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/liuzc/LeaveIt&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo LeaveIt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;部署上线&#34;&gt;部署上线&lt;/h2&gt;

&lt;p&gt;这里还是选择了部署在 Github Pages 上，因为方便且能很好地管理源文件。&lt;/p&gt;

&lt;p&gt;本地测试确认没问题后，直接在站点目录下输入命令 &lt;code&gt;hugo&lt;/code&gt; 即可编译，然后将所有内容 push 到 GitHub 上即可。&lt;/p&gt;

&lt;p&gt;由于 Hugo 提供了另一种方式来管理源代码与站点文件，即在配置文件 &lt;code&gt;config.yoml&lt;/code&gt; 中加一条 &lt;code&gt;publishDir = &amp;quot;docs&amp;quot;&lt;/code&gt; 的选项，便可把所有编译生成的站点文件放在docs文件夹里，而 GitHub 能在设置中手动将 Pages 的目录选为 docs，这样便能达成一次 push，同时保存源代码与站点文件的结果，我很喜欢。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ThImuiY.jpg&#34; alt=&#34;Select Source&#34; /&gt;&lt;/p&gt;

&lt;p&gt;稍等片刻，便能输入 &lt;code&gt;yourname.github.io&lt;/code&gt; 看到你的博客了。&lt;/p&gt;

&lt;h3 id=&#34;自定义域名&#34;&gt;自定义域名&lt;/h3&gt;

&lt;p&gt;当然还是和以前一样自己弄了个域名，并且发现现在不需要手动增加一个 CNAME 文件，可以直接在设置里填写域名便会自动生成，很方便，好评。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/KAUTgAH.jpg&#34; alt=&#34;Custom domain&#34; /&gt;&lt;/p&gt;

&lt;p&gt;接着只需要在域名服务商那里设置一下 DNS 解析，由于我这次没有继续选择 DNSPOD，而是直接用的 NameSilo 后台的解析，所以改用 A 解析，四个 ip 地址都是 GitHub 提供的，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/pyPMXvG.jpg&#34; alt=&#34;DNS Records&#34; /&gt;&lt;/p&gt;

&lt;p&gt;至此，基本就全部完成，其它都是一些小东西的改动，日后慢慢来。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://hestation.com/about/</link>
      <pubDate>Mon, 15 Jul 2019 12:08:23 +0800</pubDate>
      
      <guid>https://hestation.com/about/</guid>
      <description>

&lt;h3 id=&#34;关于我&#34;&gt;关于我&lt;/h3&gt;

&lt;p&gt;待补充&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>多设备使用 Hexo 写博客的解决方案</title>
      <link>https://hestation.com/2019/hexo-multi-devices/</link>
      <pubDate>Sun, 16 Jun 2019 15:39:47 +0800</pubDate>
      
      <guid>https://hestation.com/2019/hexo-multi-devices/</guid>
      <description>

&lt;p&gt;最近弄了一台 XPS 13，但同时原来的 MacBook Pro也在使用，就涉及到两台设备需要同时使用 Hexo 编辑、上传 Blog 文件的问题，所以想到把源文件放到服务器上，以下解决方案的记录。&lt;/p&gt;

&lt;h2 id=&#34;了解-hexo-机制&#34;&gt;了解 Hexo 机制&lt;/h2&gt;

&lt;p&gt;首先，要搞清楚使用 Hexo 搭建博客的基本机制，本地 git clone 自 Hexo 的并非我们要部署的文件，而通过 &lt;code&gt;hexo d&lt;/code&gt; 上传部署到 GitHub 的其实是它编译之后的文件，基本就是一个纯静态的 html + css + js 页面，不包括源文件，实际体现在我们本地就是 &lt;code&gt;.deploy_git&lt;/code&gt; 这个文件夹里的。&lt;/p&gt;

&lt;p&gt;了解其机制之后就好办了，一般情况通过 GitHub 作为中转站有两种方式，一种是在你 name.github.io 基础上直接新建一个 hexo 分支，并将它设置为默认分支，这样每次先将源文件推到 hexo 默认分支上，再编译部署实际内容到 master 分支，从而实现一个仓库同时管理源文件与博客文件。&lt;/p&gt;

&lt;p&gt;不过我比较喜欢单独建一个私有仓库来存储这些内容，以下是我的步骤：&lt;/p&gt;

&lt;h2 id=&#34;新建仓库存储源文件&#34;&gt;新建仓库存储源文件&lt;/h2&gt;

&lt;p&gt;1、先定义原博客文件夹目录为 blog，blog 下新建一个 .gitignore，将一些不需要上传保存的内容忽略掉：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;.DS_Store
Thumbs.db
db.json
*.log
node_modules/
public/
.deploy*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、Github 新建一个用于保存源文件的仓库，这里设置为 blog_backup（不需要添加 README 文件，直接空白的），然后将本地与远程仓库关联，并推上去。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git commit -m “first commit”
git remote add origin git@github.com:&amp;lt;github_name&amp;gt;/blog_backup.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3、完成之后，可以检查下是否成功，是否一些主动忽略的文件夹没有上传上去，确认没有问题之后，再去其它机器操作。&lt;/p&gt;

&lt;h2 id=&#34;服务器操作&#34;&gt;服务器操作&lt;/h2&gt;

&lt;p&gt;解决了源文件上传同步问题，接下来就是 ssh 到服务器把文件 down 下载，然后安装好本地部署需要的环境，再编译上传即可，这里以 GCP 为例：&lt;/p&gt;

&lt;p&gt;1、直接在 &lt;code&gt;VM 实例&lt;/code&gt; 页面点击 SSH 连接，登陆到终端，然后搭建 git 环境&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装 Git&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置 Git 全局邮箱和用户名&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &amp;quot;yourgithubname&amp;quot;
git config --global user.email &amp;quot;yourgithubemail&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置ssh&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;keyssh-keygen -t rsa -C &amp;quot;youremail&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;将 id_rsa 公钥粘贴到 Github&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装 Node.js&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;重启终端，然后通过 nvm 安装&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvm install stable
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;全局安装 Hexo&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，本地环境已经安装完毕，接着下载源文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:&amp;lt;github_name&amp;gt;/blog_backup.git
cd blog_backup
npm install
npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注意-这里由于原有的-git-源文件仓库里的-themes-还包含了主题的-git-仓库-所以实际主题的东西没有被下载下来-需要手动再-clone-一次&#34;&gt;注意，这里由于原有的 Git 源文件仓库里的 themes 还包含了主题的 git 仓库，所以实际主题的东西没有被下载下来，需要手动再 clone 一次。&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd your-hexo-site
git clone https://github.com/iissnan/hexo-theme-next themes/next
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，新机器就与旧的环境保持一致了，每次做了任何修改，先把源文件 Git 上传一下，然后再通过 &lt;code&gt;hexo g -d&lt;/code&gt; 部署编译。&lt;/p&gt;

&lt;p&gt;而如果在另一个电脑上操作，就先 &lt;code&gt;git pull&lt;/code&gt; 一下，保证与线上内容一致。&lt;/p&gt;

&lt;h2 id=&#34;以上内容参考资料&#34;&gt;以上内容参考资料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/21193762&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.zhihu.com/question/21193762&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hexo.io/docs/index.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://hexo.io/docs/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://theme-next.iissnan.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://theme-next.iissnan.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>如何注册并使用美区 Apple ID</title>
      <link>https://hestation.com/2018/reg-appleid/</link>
      <pubDate>Thu, 15 Nov 2018 12:30:03 +0800</pubDate>
      
      <guid>https://hestation.com/2018/reg-appleid/</guid>
      <description>

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;因为每个人的使用需求不同，比如 SS、SSR、V2 等都需要相对应的网络代理工具 App。但由于某些特殊原因，中国区 App Store 基本上下架了大部分的网络代理工具 App（例如用的比较多的小火箭 Shadowrocket 和圈 Quantumult 等等）。&lt;/p&gt;

&lt;p&gt;因为中国区无法下载到自己所需要使用的App，则大部分人都需要注册非中国区（如美区、港区等）的应用商店付费进行下载（出于尊重作者的角度出发，请尽量不要使用共享 Apple ID 账号下载软件，正版 App 其实也就几十块钱）。&lt;/p&gt;

&lt;p&gt;本文以注册美区 Apple ID 账号为例（其他地区账号同理），但关于美区 Apple ID 账号和绑定  PayPal 自行 Google 搜索相关教程，如需求较大后续我可以再出相关教程。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;美区 Apple ID 账户可绑定美区（只能美区，其他地区不行） Paypal 进行付款。&lt;/li&gt;
&lt;li&gt;港区 Apple ID 账户可注册 &lt;code&gt;Tap and Go&lt;/code&gt; 香港 MS 虚拟预付信用卡并绑定港区 Apple ID 账户进行付款（前提你要有港澳通行证）。具体操作可参考 BIGDONGDONG 的视频教学：&lt;a href=&#34;https://www.youtube.com/watch?v=97IzYP0zNqk&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;5分钟让你拥有一张 Mastercard 外币种卡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;日区 Apple ID 账户可直接绑定 JCB 信用卡进行付款。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;注册美区-apple-id-账户&#34;&gt;注册美区 Apple ID 账户&lt;/h2&gt;

&lt;h3 id=&#34;登陆苹果账户官网&#34;&gt;登陆苹果账户官网&lt;/h3&gt;

&lt;p&gt;首先打开 &lt;a href=&#34;appleid.apple.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;appleid.apple.com&lt;/a&gt;，首次打开时首页展示图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd95185d.jpg&#34; alt=&#34;创建 Apple ID&#34; /&gt;&lt;/p&gt;

&lt;p&gt;点击底部 &lt;code&gt;Create your Apple ID&lt;/code&gt; 进入注册账户界面，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd96cbc4.jpg&#34; alt=&#34;地区：美国&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;国家/地区&lt;/code&gt;一定要选择 &lt;code&gt;United States&lt;/code&gt;，也就是&lt;code&gt;美国&lt;/code&gt;，这点很重要，直接决定了你的账户是属于哪个&lt;code&gt;国家/地区&lt;/code&gt;（如果想注册香港地区的账号，请选择 &lt;code&gt;HONG KONG&lt;/code&gt;，其他国家/地区同理）。&lt;/p&gt;

&lt;p&gt;美区Apple ID建议使用&lt;code&gt;谷歌邮箱&lt;/code&gt;注册（为了好过玄学美区 PayPal 绑定）。注册内容全部填写完毕后，拉到最下面点击继续，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd965152.jpg&#34; alt=&#34;填写完所有信息后继续&#34; /&gt;&lt;/p&gt;

&lt;p&gt;点击继续按钮后，苹果会让你验证你的电子邮件，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd9755a5.jpg&#34; alt=&#34;邮箱验证&#34; /&gt;&lt;/p&gt;

&lt;p&gt;验证完毕后，会进入你的&lt;code&gt;账户信息页面&lt;/code&gt;，如果&lt;code&gt;国家/地区&lt;/code&gt;显示为&lt;code&gt;美国&lt;/code&gt;，则注册成功，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd98cb07.jpg&#34; alt=&#34;注册成功示意图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是，注册好新账户后，美区 Apple ID 还暂不可用，需要在手机上登陆 App Store 来激活新注册的美区账户，才可使用。&lt;/p&gt;

&lt;p&gt;在用新美区账户登陆 App Store 之前，请确保你的手机打开了美国节点的&lt;code&gt;全局翻墙&lt;/code&gt;！这点很重要，否则无法完成激活！（除非你有付款方式）&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS：如果是激活港区 Apple ID，请使用香港节点全局翻墙，其他地区同理。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;激活美区账户&#34;&gt;激活美区账户&lt;/h3&gt;

&lt;p&gt;打开 &lt;code&gt;App Store&lt;/code&gt;，并点击&lt;code&gt;右上角头像&lt;/code&gt;（本教程使用的设备系统为 iOS 12，比较老的系统如果右上角没有头像，请直接拉到 App Store 首页最下面，点击你的账户并退出），示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dda2653a.png&#34; alt=&#34;App Store 首页&#34; /&gt;&lt;/p&gt;

&lt;p&gt;退出现有账户，输入新注册的美区 Apple ID 账户及密码，并点击 &lt;code&gt;Sign In&lt;/code&gt; 登陆，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd985df9.jpg&#34; alt=&#34;登陆美区 Apple ID&#34; /&gt;&lt;/p&gt;

&lt;p&gt;因为是第一次登陆，会提示你账户从未使用过，需要进行检查（其实也就是让你填写付款信息和确认国家），请直接点击 &lt;code&gt;Review&lt;/code&gt; 并进入下一步，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd97d197.jpg&#34; alt=&#34;检查账户信息&#34; /&gt;&lt;/p&gt;

&lt;p&gt;请确认你的&lt;code&gt;国家/地区&lt;/code&gt;是在 &lt;code&gt;United States&lt;/code&gt; ，然后点击下一行按钮使其变成绿色，最后点击右上角 &lt;code&gt;Next&lt;/code&gt;，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd993e8f.jpg&#34; alt=&#34;示意图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这里有一点需要注意的是，如果你没有开启美国节点的全局模式，则付款方式（PAYMENT METHOD）这里不会出现 &lt;code&gt;None&lt;/code&gt; 这个选项，并且只有 &lt;code&gt;Credit/Debit Card&lt;/code&gt; 以及 &lt;code&gt;PayPal&lt;/code&gt; 这2个付款方式选项。&lt;/p&gt;

&lt;p&gt;如果发现付款方式中没有 &lt;code&gt;None&lt;/code&gt; 这个选项，请确认你的节点是否为美国节点的&lt;code&gt;全局模式&lt;/code&gt;，如果是美国节点并且开启了全局，则说明此节点不可用，请切换节点！&lt;/p&gt;

&lt;p&gt;下面的地址及电话号码请直接去谷歌地图随便点击一个美国的地理位置然后输入信息即可，或直接 &lt;a href=&#34;https://www.fakeaddressgenerator.com/World/us_address_generator&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这个网站&lt;/a&gt; 生成一个地址（建议填写&lt;code&gt;美国免税州地址&lt;/code&gt;，如果是用给出的生成地址网站可以自行筛选指定免税州信息，具体问题请谷歌）。&lt;/p&gt;

&lt;p&gt;全部信息填写完成后，点击右上角 &lt;code&gt;Next&lt;/code&gt; 进入下一步，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2dd98993e.jpg&#34; alt=&#34;付款方式选择 None&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这时苹果会提示你，账户可继续使用，至此，美区 Apple ID 注册才全部完成，点击 &lt;code&gt;Continue&lt;/code&gt; 完成，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2e5202881.jpg&#34; alt=&#34;完成&#34; /&gt;&lt;/p&gt;

&lt;p&gt;之后，就可以在 App Store 里搜索 &lt;code&gt;网络代理工具App&lt;/code&gt;，如 &lt;code&gt;Quantumult&lt;/code&gt;，示意图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/01/01/5c2b2e52a5fb5.png&#34; alt=&#34;Quantumult&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;注意事项&#34;&gt;注意事项&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;以下两部分内容来源参考自热心网友 @taresky，原文地址：&lt;a href=&#34;https://taresky.com/post/Apple-ID-US&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;美区 Apple ID 使用指南&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;如何使用美区-apple-id-购物&#34;&gt;如何使用美区 Apple ID 购物&lt;/h3&gt;

&lt;p&gt;由于美区 Apple ID &lt;code&gt;仅支持绑定美国发卡行的信用卡/借记卡&lt;/code&gt;，故在支付方式上相对较困难，以下是几种常规的解决方式：&lt;/p&gt;

&lt;p&gt;1、直接在 &lt;code&gt;苹果美国官网&lt;/code&gt; 购买 &lt;code&gt;iTunes Gift Card&lt;/code&gt; 礼品卡，充值到账户余额，此方式支持国内发卡行的双币种卡或全币种卡，若支付失败可能是发卡行的问题，换卡重试。谨慎在淘宝购买任何 &lt;code&gt;App 兑换码&lt;/code&gt; 或 &lt;code&gt;iTunes Gift Card&lt;/code&gt;，很大部分是黑卡（被盗刷的信用卡），有封号危险。&lt;/p&gt;

&lt;p&gt;2、绑定美区支持的信用卡或Paypal，有如下几种方式推荐：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果刚好要去美国当地旅游，可顺便办理美国的信用卡或储蓄卡，这种方法最稳定。&lt;/li&gt;
&lt;li&gt;绑定美区 PayPal（方便，但有一定几率被风控导致不能支付）&lt;/li&gt;
&lt;li&gt;购买 &lt;code&gt;Visa Gift Card&lt;/code&gt;，这是 Visa 的储值卡，类似于香港拍住赏这种，余额用完后无法充值，在美国当地（或淘宝）可购买，&lt;a href=&#34;https://www.simon.com/giftcard/card_balance.aspx&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Simon Gift Card&lt;/a&gt; 是其中一种，也可自行选择其他的，但建议每次购买最小面额，防止意外损失。&lt;/li&gt;
&lt;li&gt;在某些国内银行做见证开户，如美国国泰银行账户可在浙江民泰银行开户（这种只是网传，本人并没有亲测）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;重点注意的&#34;&gt;重点注意的&lt;/h3&gt;

&lt;p&gt;使用美区 Apple ID，本质上其实是违反苹果的用户协议的行为，所以请尽量减少触发风控的一些操作：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IP频繁变动&lt;/li&gt;
&lt;li&gt;Apple ID在多台设备登录（可能被识别为共享软件行为，即盗版）&lt;/li&gt;
&lt;li&gt;消费频繁且金额过高，IP有异常&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;群里看到部分人最近绑定或通过美区 PayPal 支付时遇到“很抱歉，无法设置您对 iTunes and App Store 的预核准付款”的提示，建议先将支付方式修改为 &lt;code&gt;None&lt;/code&gt;，然后将 Apple ID 和美区 Paypal 的付款地址修改为相同的免税州地址，接着再次尝试绑定，若依然有问题，大概率是触发了苹果的风控，如果英文足够好，可直接致电美区苹果客服要求帮你处理；若英文不够好，建议等待两三天后尝试是否可以使用；若还不行，建议换用其它支付方式。&lt;/p&gt;

&lt;h2 id=&#34;写在最后&#34;&gt;写在最后&lt;/h2&gt;

&lt;p&gt;新手按照上述教程可 100% 完成所有地区账户的 Apple ID 注册。&lt;/p&gt;

&lt;p&gt;需要注意的是，App Store 是根据登陆账户的地区来自动适配语言的。哪怕你手机系统是中文，但如果是美区账户，则 App Store 就是英文（我了解过来是这样），具体可以自己摸索。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>华硕 RT-AC86U 刷梅林改版系统</title>
      <link>https://hestation.com/2018/merlin/</link>
      <pubDate>Thu, 01 Nov 2018 11:18:03 +0800</pubDate>
      
      <guid>https://hestation.com/2018/merlin/</guid>
      <description>

&lt;p&gt;前几天刚把 K2P 换成 86U，以下是 86U 刷梅林系统的步骤，非常简单：&lt;/p&gt;

&lt;h2 id=&#34;刷机前的准备&#34;&gt;刷机前的准备&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;EXT 格式的 1G 以上 U盘一个，如果不知道怎么格式化，可以查看此文章附录。&lt;/li&gt;
&lt;li&gt;改版梅林安装包，下载地址为：&lt;a href=&#34;https://1drv.ms/u/s!ArS0nJ_RMzVYgtwvUNgsl7Q1Z9W75Q&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;，或直接到Coolshare论坛下载：&lt;a href=&#34;http://koolshare.cn/thread-127878-1-1.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;科学上网工具离线安装包，下载地址为&lt;a href=&#34;https://1drv.ms/u/s!ArS0nJ_RMzVYgtwuoBmaqxYUM2UrxA&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;，或直接到&lt;a href=&#34;https://github.com/hq450/fancyss&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;上找到与你机器相匹配的&lt;/li&gt;
&lt;li&gt;一根网线，用于连接电脑与路由器&lt;/li&gt;
&lt;li&gt;一杯茶，用于等待的时候喝哈哈哈&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;正式开刷&#34;&gt;正式开刷&lt;/h2&gt;

&lt;h3 id=&#34;系统初始化&#34;&gt;系统初始化&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;拿到机器后，打开机器背后开关键，然后连上电源，开机。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;找到一根网线，一头接自己的电脑，另一头接路由器的LAN口。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在浏览器地址栏中输入&lt;a href=&#34;http://router.asus.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;router.asus.com&lt;/a&gt;进入管理后台。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;依次设置自己的PPPoE、无线WIFI、管理后台账号，设置完之后会进入到官方原版的后台界面。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;刷改版梅林固件&#34;&gt;刷改版梅林固件&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在后台管理界面中找到&lt;code&gt;高级设置&lt;/code&gt;-&lt;code&gt;系统管理&lt;/code&gt;-&lt;code&gt;固件升级&lt;/code&gt;，选择刚才将已准备好的梅林固件（格式为.w），然后点击上传，等待两三分钟即可，当重启后重新进入后台时有一个 &lt;code&gt;Powered by Asuswrt-Merlin &amp;amp; Coolshare&lt;/code&gt; 代表成功。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;双清路由器。进入&lt;code&gt;高级设置&lt;/code&gt;-&lt;code&gt;系统设置&lt;/code&gt;，找到&lt;code&gt;Presistent JFFS2 parttition&lt;/code&gt;，将&lt;code&gt;Format JFFS partition at next boot&lt;/code&gt;和&lt;code&gt;Enable JFFS custom scripts and configs&lt;/code&gt;两项都设置为是，并点击&lt;code&gt;应用本页面设置&lt;/code&gt;按钮，然后重启路由器即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- more --&gt;

&lt;h3 id=&#34;安装科学上网工具&#34;&gt;安装科学上网工具&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;由于梅林已经取消软件中心的科学上网工具在线安装，所以可采取离线安装的方式。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;从&lt;a href=&#34;https://1drv.ms/u/s!ArS0nJ_RMzVYgtwuoBmaqxYUM2UrxA&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;上下载离线安装包，打开软件中心，先点击更新将软件中心升级到最新版本，然后点击&lt;code&gt;离线安装&lt;/code&gt;，上传刚才下载的安装包，注意格式需要为&lt;code&gt;.tar.gz&lt;/code&gt;，如果不对，手动将其补全后再上传。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;等待安装成功后，再打开科学上网，再配置自己的节点即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;挂载虚拟内存&#34;&gt;挂载虚拟内存&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将已准备好的EXT格式U盘插入路由器背部接口（2.0或3.0都可以）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;打开软件中心，将&lt;code&gt;虚拟内存&lt;/code&gt;这个软件安装上&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;打开该软件，选择这个磁盘，我这里叫做&lt;code&gt;sda&lt;/code&gt;，选择虚拟内存大小为&lt;code&gt;512M&lt;/code&gt;或&lt;code&gt;1G&lt;/code&gt;，然后点创建虚拟内存，等待一段时间即可。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;再次打开软件中心-虚拟内存，确保状态显示为&lt;code&gt;在/mnt/sda下找到swapfile，且已成功挂载！&lt;/code&gt;，表明已挂载成功。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;附录-u盘格式化为ext格式&#34;&gt;附录：U盘格式化为EXT格式&lt;/h2&gt;

&lt;p&gt;准备好一个1G以上的U盘（随便的都行，利用率不高），并格式化为EXT2,3,4任意的格式，我这边用的是EXT3。&lt;/p&gt;

&lt;h3 id=&#34;windows系统&#34;&gt;Windows系统&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果没有Linux基础，可使用软件进行操作，可参考百度经验：&lt;a href=&#34;https://jingyan.baidu.com/article/fea4511a142846f7bb912522.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;如何在windows下把硬盘格式化成EXT3格式？&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果有一定Linux基础，可使用SSH连接到路由器通过路由器进行操作，具体步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;打开路由器后台&lt;code&gt;高级设置&lt;/code&gt;-&lt;code&gt;系统设置&lt;/code&gt;，找到&lt;code&gt;服务&lt;/code&gt;中的&lt;code&gt;启用SSH&lt;/code&gt;，选择打开&lt;code&gt;LAN+WAN&lt;/code&gt;，然后保存设置。&lt;/li&gt;
&lt;li&gt;下载一个叫PuTTY的软件，hostname填&lt;code&gt;192.168.50.1&lt;/code&gt;（路由器后台地址，可能不一样，自己查看下） 然后选择&lt;code&gt;SSH&lt;/code&gt;。port端口号为&lt;code&gt;22&lt;/code&gt;，然后点open。&lt;/li&gt;
&lt;li&gt;用自己前面设置的路由器账号密码登录即可，然后出现命令行界面。&lt;/li&gt;
&lt;li&gt;在U盘插入路由器后面的情况下，依次输入以下命令（两横杠后的是解释说明，不用输入），然后等待显示完成即可。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;df -h // 找到你的盘符,如：sda1
umount /dev/sda1 // 解除进程的占用
/bin/mkntfs /dev/sda1 // 格式化硬盘为ntfs格式
mkfs.ext4 -T largefile /dev/sda1 // 格式化硬盘为ext4格式
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;macos系统&#34;&gt;macOS系统&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;确保已经安装了Mac下的包管理软件Homebrew，如果没有，可以用以下命令安装&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装 e2fsprogs&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install e2fsprogs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;插上U盘，执行以下命令在执行结果中找到U盘盘符，我这里是&lt;code&gt;/dev/disk2s1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;diskutil list
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;卸载U盘并将其格式化为 &lt;code&gt;ext2/3/4&lt;/code&gt;格式，这里以ext3为例&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;diskutil unmountdisk /dev/disk2s1
sudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext3 /dev/disk2s1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;中间可能会有确认提示，按提示操作即可。格式化完成就能直接拔掉U盘了。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>《野火集》语录-第30页</title>
      <link>https://hestation.com/2017/yehuoji-30/</link>
      <pubDate>Sun, 16 Jul 2017 16:10:21 +0800</pubDate>
      
      <guid>https://hestation.com/2017/yehuoji-30/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;一个不公的体制压着人民，能够长久地压着，因为它有一个社会哲学的托词：逆来顺受、明哲保身的社会哲学。看穿了体制不公的人知道事不可为而转向冷漠；不曾看穿的人则早被教育了忍耐是美德、忍受是义务。 但是闷啊，这是一个有冤无处申的社会。&lt;/p&gt;

&lt;p align=&#34;right&#34;&gt;《野火集》–龙应台&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>龙应台《 野火集》摘录</title>
      <link>https://hestation.com/2017/yehuoji/</link>
      <pubDate>Sun, 16 Jul 2017 16:08:12 +0800</pubDate>
      
      <guid>https://hestation.com/2017/yehuoji/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我们的上一代，受战乱和贫穷之苦，期望我们这一代温饱安定。&lt;/p&gt;

&lt;p&gt;我们这一代温饱安定了，但是受威权统治之苦，&lt;/p&gt;

&lt;p&gt;期望下一代在没有恐惧、没有控制的自由环境中成长。&lt;/p&gt;

&lt;p align=&#34;right&#34;&gt;《野火集》–龙应台&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>第一篇文章用于测试</title>
      <link>https://hestation.com/2017/my-first-post/</link>
      <pubDate>Fri, 14 Jul 2017 18:31:53 +0800</pubDate>
      
      <guid>https://hestation.com/2017/my-first-post/</guid>
      <description>

&lt;h2 id=&#34;welcome-to-github-pages&#34;&gt;Welcome to GitHub Pages&lt;/h2&gt;

&lt;p&gt;You can use the &lt;a href=&#34;https://github.com/jolsonhy/jolsonhy.github.io/edit/master/README.md&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;editor on GitHub&lt;/a&gt; to maintain and preview the content for your website in Markdown files.&lt;/p&gt;

&lt;p&gt;Whenever you commit to this repository, GitHub Pages will run &lt;a href=&#34;https://jekyllrb.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Jekyll&lt;/a&gt; to rebuild the pages in your site, from the content in your Markdown files.&lt;/p&gt;

&lt;h3 id=&#34;markdown&#34;&gt;Markdown&lt;/h3&gt;

&lt;p&gt;Markdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Syntax highlighted code block

# Header 1
## Header 2
### Header 3

- Bulleted
- List

1. Numbered
2. List

**Bold** and _Italic_ and `Code` text

[Link](url) and ![Image](src)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more details see &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub Flavored Markdown&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;jekyll-themes&#34;&gt;Jekyll Themes&lt;/h3&gt;

&lt;p&gt;Your Pages site will use the layout and styles from the Jekyll theme you have selected in your &lt;a href=&#34;https://github.com/jolsonhy/jolsonhy.github.io/settings&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;repository settings&lt;/a&gt;. The name of this theme is saved in the Jekyll &lt;code&gt;_config.yml&lt;/code&gt; configuration file.&lt;/p&gt;

&lt;h3 id=&#34;support-or-contact&#34;&gt;Support or Contact&lt;/h3&gt;

&lt;p&gt;Having trouble with Pages? Check out our &lt;a href=&#34;https://help.github.com/categories/github-pages-basics/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt; or &lt;a href=&#34;https://github.com/contact&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contact support&lt;/a&gt; and we’ll help you sort it out.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>